import nextcord
from nextcord import Interaction
from nextcord.ext import commands
import random

# –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞ —Å –±–æ—Ç–æ–º (—Ç–æ–ª—å–∫–æ –ª—Å)
class RPCBOT(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        
    @nextcord.slash_command(description = "–ö–∞–º–µ–Ω—å –Ω–æ–∂–Ω–∏—Ü—ã –±—É–º–∞–≥–∞ —Å –±–æ—Ç–æ–º", dm_permission = True)
    #@application_checks.dm_only()
    async def game_rps_bot(self, interaction: Interaction):
        view = rps_bot()
        mes = await interaction.response.send_message("–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:", view=view)
        await view.wait()
        list = [1, 2, 3]
        bot_choice = random.choice(list)
        if view.player_choice is not None:
            # –≤—Å–µ —Å–ª—É—á–∞–∏ –∫–∞–º–Ω—è
            if view.player_choice == 1 and bot_choice == 2:
               await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã")
               await interaction.channel.send("–í—ã –ø–æ–±–µ–¥–∏–ª–∏")
            if view.player_choice == 2 and bot_choice == 1:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –±—É–º–∞–≥—É")
                await interaction.channel.send("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")
            if view.player_choice == 1 and bot_choice == 1:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å")
                await interaction.channel.send("–ù–∏—á—å—è")
            # –≤—Å–µ —Å–ª—É—á–∞–∏ –Ω–æ–∂–Ω–∏—Ü
            if view.player_choice == 2 and bot_choice == 3:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –±—É–º–∞–≥—É")
                await interaction.channel.send("–í—ã –ø–æ–±–µ–¥–∏–ª–∏")
            if view.player_choice == 3 and bot_choice == 2:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã")
                await interaction.channel.send("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")
            if view.player_choice == 2 and bot_choice == 2:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –Ω–æ–∂–Ω–∏—Ü—ã")
                await interaction.channel.send("–ù–∏—á—å—è")
            # –≤—Å–µ —Å–ª—É—á–∞–∏ –±—É–º–∞–≥–∏
            if view.player_choice == 3 and bot_choice == 1:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –∫–∞–º–µ–Ω—å")
                await interaction.channel.send("–í—ã –ø–æ–±–µ–¥–∏–ª–∏")
            if view.player_choice == 1 and bot_choice == 3:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –±—É–º–∞–≥—É")
                await interaction.channel.send("–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏")
            if view.player_choice == 3 and bot_choice == 3:
                await mes.edit(content = self.bot.user.mention+" –í—ã–±—Ä–∞–ª –±—É–º–∞–≥—É")
                await interaction.channel.send("–ù–∏—á—å—è")
        # –≤—Å–µ —Å–ª—É—á–∞–∏ –∫–æ–≥–¥–∞ –≤—Ä–µ–º—è –≤—ã—à–ª–æ
        if view.player_choice is None:
            await interaction.channel.send("–í—Ä–µ–º—è –≤—ã—à–ª–æ...")

class rps_bot(nextcord.ui.View):
    def __init__(self):
        super().__init__()
        self.timeout = 10 #—Ç–∞–π–º–∞—É—Ç –Ω–∞ 10 —Å–µ–∫
        self.player_choice = None # –∏–≥—Ä–æ–∫ –¥–µ–ª–∞–µ—Ç –≤—ã–±–æ—Ä
   
    @nextcord.ui.button(label="–ö–∞–º–µ–Ω—å", emoji= "ü™®", style=nextcord.ButtonStyle.blurple)
    async def button1(self, button: nextcord.ui.Button, interaction: nextcord.Interaction):
        self.player_choice = 1
        self.status = True
        self.stop()

    @nextcord.ui.button(label="–ù–æ–∂–Ω–∏—Ü—ã", emoji= "‚úÇ", style=nextcord.ButtonStyle.blurple)
    async def button2(self, button: nextcord.ui.Button, interaction: nextcord.Interaction):
        self.player_choice = 2
        self.status = True
        self.stop()

    @nextcord.ui.button(label="–ë—É–º–∞–≥–∞", emoji= "üìÑ", style=nextcord.ButtonStyle.blurple)
    async def button3(self, button: nextcord.ui.Button, interaction: nextcord.Interaction):
        self.player_choice = 3
        self.status = True
        self.stop()
            
def setup(bot):
    bot.add_cog(RPCBOT(bot))